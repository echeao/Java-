/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2022-12-02 05:48:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.SQLOutput;

public final class hello_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Title</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h1>HELLO JSP</h1>\r\n");

    out.println("暗黙オブジェクトoutの使用例です。");
    out.println("<BR>");

    //(1)forループ内で変数xを1ずつ増加させ、その結果を
    //   printlnメソッドで表示しています。
    for (int x = 1; x <= 10; x++) {
        out.println(x);
        out.println("<BR>");
    }

      out.write("\r\n");
      out.write("<h1>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</h1>\r\n");

    out.println("暗黙オブジェクトrequestの使用例です。");
    out.println("<BR><BR>");
    //(1)パラメータ値のエンコード方式を指定します。
    //   パラメータ値を取得する前に指定します。
    request.setCharacterEncoding("windows-31j");

    out.println("1.getParameterメソッドの使用例です。");
    out.println("<BR>");
    //(2)パラメータ名（name）を指定し、パラメータ値
    //   を取得します。
    out.println(request.getParameter("name"));
    out.println("<BR><BR>");

    out.println("2.getParameterValuesメソッドの使用例です。");
    out.println("<BR>");
    //(3)複数の値を持つパラメータ名（hobby）を指定し、
    //   パラメータ値を取得します。
//    String[] strAry = request.getParameterValues("hobby");
//    for (int i = 0; i < strAry.length; i++) {
//        out.print(strAry[i]);
    }

      out.write("\r\n");
      out.write("<h1>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</h1>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
